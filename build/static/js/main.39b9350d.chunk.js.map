{"version":3,"sources":["components/Filter.js","services/PersonsService.js","components/Numbers.js","components/Message.js","components/ErrorMessage.js","components/PersonForm.js","index.js"],"names":["Filter","filterVal","setter","value","onChange","event","target","newPerson","persons","matchPerson","find","person","name","axios","put","SERVER_URL","id","post","get","then","response","data","delete","Numbers","setPersons","map","key","number","type","onClick","window","confirm","filter","personsService","Message","message","class","ErrorMessage","PersonForm","setNewName","setNumber","newName","newNumber","useState","setMessage","errorMessage","setErrorMessage","submittedName","setSubmittedName","onSubmit","preventDefault","setTimeout","catch","error","concat","alert","console","log","App","setFilter","useEffect","initialPeople","personsToShow","prefix","toLowerCase","startsWith","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39b9350d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filterVal, setter }) => {\r\n\r\n    const handleFilterChange = (event) => {\r\n      setter(event.target.value);\r\n    }\r\n    return (\r\n      <>\r\n        <p>\r\n          Filter this query\r\n      </p>\r\n        <form>\r\n          <input\r\n            value={filterVal}\r\n            onChange={handleFilterChange} />\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default Filter","import axios from 'axios'\r\n\r\n\r\nconst SERVER_URL = '/api/persons'\r\n\r\nconst personDelete = (id) => {\r\n    axios\r\n        .delete(SERVER_URL + '/' + id, id)\r\n        .then(response => {\r\n        })\r\n}\r\n\r\nconst create = (newPerson, persons) => {\r\n    const matchPerson = persons.find(person => person.name == newPerson.name)\r\n    if (matchPerson) {\r\n            let response = axios.put(SERVER_URL + '/' + matchPerson.id, newPerson);\r\n            return response;\r\n    } else {\r\n        const response = axios.post(SERVER_URL, newPerson)\r\n        return response\r\n    }\r\n}\r\n\r\nconst getAll = () => {\r\n    return axios.get(SERVER_URL).then(response => response.data)\r\n}\r\n\r\nexport default { create, getAll, personDelete}","import React from 'react'\r\nimport personsService from '../services/PersonsService'\r\n\r\nconst Numbers = ({ persons, setPersons }) => {\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {*id The id of the person id} \r\n   * @param {*name The name of the person}\r\n   * \r\n   * @def Button handler which returns a functions that deletes a specific person id\r\n   */\r\n  const handleDelete = (id, name) => {\r\n    const handler = () => {\r\n      const shouldDelete = window.confirm(`Are you sure you want to delete ${name}?`)\r\n      if (shouldDelete) {\r\n      setPersons(persons.filter(person => person.id != id))\r\n      personsService.personDelete(id)\r\n      }\r\n    }\r\n    return handler\r\n  }\r\n\r\n\r\n    return (\r\n      <>\r\n        <ul>\r\n          {persons.map((person) =>\r\n            <li key={person.name}>\r\n              {person.name} {person.number}\r\n              <button type=\"button\" onClick={handleDelete(person.id, person.name)}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default Numbers","import React from 'react'\r\n\r\nconst Message = ({name, message}) => {\r\n\r\n    if (message === \"\") {\r\n        return null\r\n    }\r\n     return (\r\n        <>\r\n        <div class=\"message\">\r\n             {message + \" \" + name}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\n\r\nconst ErrorMessage = ({name, message}) => {\r\n\r\n    if (message === \"\") {\r\n        return null\r\n    }\r\n     return (\r\n        <>\r\n        <div class=\"error_message\">\r\n             {message + \" \" + name}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport personsService from '../services/PersonsService'\r\nimport Message from './Message'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nconst SERVER_URL = 'http://localhost:3001/persons'\r\n\r\nconst PersonForm = ({ setNewName, setNumber, newName, newNumber, persons, setPersons }) => {\r\n\r\n  const [message, setMessage] = useState(\"\")\r\n  const [errorMessage, setErrorMessage] = useState(\"\")\r\n  const [submittedName, setSubmittedName] = useState(\"\")\r\n\r\n  /**\r\n   * Adds a persons to the list on form submit event. If the name is already in the list update \r\n   * if the users would like to do this.\r\n   */\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    let newPerson = { name: newName, number: newNumber }\r\n    if (!newNumber || !newName) {\r\n      alert(\"Please enter both a number and name\");\r\n    } else {\r\n      if (persons.find(person => person.name === newPerson.name)) {\r\n        const message = `${newPerson.name} is already in database.  Would you like to replace this number with a new one?`\r\n        const replace = window.confirm(message)\r\n        if (replace) {\r\n          setPersons(persons.map(person => person.name === newPerson.name ? newPerson : person));\r\n          const x = personsService.create(newPerson, persons)\r\n            .then(setSubmittedName(newName))\r\n            .then(setMessage('Succesfully updated'))\r\n            .then(setTimeout(() => {\r\n              setMessage(\"\")\r\n              setSubmittedName(\"\")\r\n            }\r\n              , 5000))\r\n            .catch((error) => {\r\n              setErrorMessage(\"Already deleted from Phonebook:\")\r\n              setTimeout(() => {\r\n                setErrorMessage(\"\")\r\n                setMessage(\"\")\r\n                setSubmittedName(\"\")\r\n              }, 5000)\r\n            })\r\n        }\r\n      } else {\r\n        setPersons(persons.concat(newPerson));\r\n        const x = personsService.create(newPerson, persons)\r\n          .then(setSubmittedName(newName))\r\n          .then(setMessage('Sucesfully added'))\r\n          .then(setTimeout(() => {\r\n            setMessage(\"\")\r\n            setSubmittedName(\"\")\r\n          }\r\n            , 5000))\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Handles the input changing in the person name field by the user. Event is the changing input\r\n   */\r\n  const handlePersonChange = (event) => {\r\n    console.log(event.target.value);\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Handles the input changing in the person number field by the user. Event is the changing input\r\n   */\r\n  const handleNumberChange = (event) => {\r\n    setNumber(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Phonebook\r\n      </h1>\r\n      <ErrorMessage name={submittedName} message={errorMessage} />\r\n      <Message name={submittedName} message={message} />\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name:\r\n      <input\r\n            value={newName}\r\n            onChange={handlePersonChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number:\r\n      <input\r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Filter from './components/Filter'\r\nimport Numbers from './components/Numbers'\r\nimport PersonForm from './components/PersonForm'\r\nimport personsService from './services/PersonsService'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNumber] = useState('');\r\n  const [filterVal, setFilter] = useState('');\r\n  console.log(\"personsServer.getAll...\", personsService.getAll())\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(initialPeople => {setPersons(initialPeople)})\r\n  }, [])\r\n\r\n  const filterFun = (name, prefix) => {\r\n    return name.toLowerCase().startsWith(prefix.toLowerCase());\r\n  }\r\n\r\n  const personsToShow = (filterVal === '') ? persons : persons.filter(person => filterFun(person.name, filterVal))\r\n\r\n  return (\r\n    <div>\r\n      <Filter filterVal={filterVal} setter={setFilter} />\r\n      <PersonForm\r\n        setNewName={setNewName} setNumber={setNumber} newName={newName} persons={persons} setPersons={setPersons} newNumber={newNumber}\r\n      />\r\n      <h2> Numbers</h2>\r\n      <Numbers persons={personsToShow} setPersons={setPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\nexport default App\r\n"],"sourceRoot":""}